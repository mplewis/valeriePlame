# DON'T FORGET TO COPY ME TO CONFIG.YML OR NOTHING WORKS! Thanks :)
# Flask server settings
server:
    # if develMode = True, Flask web server will serve to localhost only
    # for security purposes; set develMode to False to serve publicly
    develMode: True
    port: 8080
# OneStop scraping settings
oneStop:
    # season and year of data to grab
    season: Spring
    year: 2013
    # if true, only processes courses with a maximum course level of maxUndergradLevel
    undergradCoursesOnly: True
    # courses at or above this level will be called undergraduate courses
    #     example: maxUndergradLevel: 5 --> 5000 and below classes will be undergrad
    maxUndergradLevel: 5
# options for processing data and runnig statistics on said data
stats:
    # sanityCheck column/percent are used to discard outliers in data
    # the median of a column is taken, then data is compared to that median
    # if a row has greater than +/- sanityCheckPercent difference from the median,
    #     the row is dropped
    sanityCheckColumn: numSectionsTotal
    sanityCheckPercent: 5
# location of data files
dataLoc:
    # file that holds pickled subject dict
    subjList: subjList.pickled
    # directory in which to store processed course dicts
    # dicts are named after the unix time they were scraped
    courseDataDir: oneStopData
    # extension to use when storing course data files
    # example: courseDataExt = dat --> 1352129875.dat
    courseDataExt: dat
    # directory to store output SVG files
    svgDir: static/svg
    # directory in which statistical analyses will be stored
    statsDir: statsData
    # how to name statistics files (found in statsData)
    statsFiles:
        # statsDir = statsData, statsExt = dat, openClosedData/raw = openClosedRaw -->
        #     class open-closed raw data stored in "statsData/openClosedRaw.dat"
        statsExt: dat
        openClosedData:
            raw: openClosedRaw
            processed: openClosedProc
    # where to store generated csv files
    csvOut: testData